# get_job_note
for c++

#include<iostream>
#include<vector>
#include<queue>
using namespace std;

struct binaryTree
{
	int val;
	binaryTree* left, * right;
	binaryTree(int x) :val(x), left(NULL), right(NULL){}
};

binaryTree* buildNode(binaryTree* root, int val)
{
	if (root == NULL)
	{
		root = new binaryTree(1);
		root->val = val;
		return root;
	}
	if (val < root->val) { root->left = buildNode(root->left, val); }
	else {
		root->right = buildNode(root->right, val);
	}
	return root;
};

	void levelOrder(binaryTree * root)
{
	queue <binaryTree * > q;
	q.push(root);
	while (!q.empty())
	{
		binaryTree* temp = q.front();
		q.pop();
		cout << temp->val << endl;
		if (temp->left)  q.push(temp->left);
		if (temp->right)  q.push(temp->right);

	} 
}


int main()
{
	binaryTree* root = NULL;
	int arr[] = { 1,2,3,4,5 };
	for (int i = 0; i < 5; i++)
	{
		root = buildNode(root, arr[i]);
	}
	levelOrder(root);




}
